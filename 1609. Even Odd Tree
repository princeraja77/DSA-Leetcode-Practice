/**
A binary tree is named Even-Odd if it meets the following conditions:

The root of the binary tree is at level index 0, its children are at level index 1, their children are at level index 2, etc.
For every even-indexed level, all nodes at the level have odd integer values in strictly increasing order (from left to right).
For every odd-indexed level, all nodes at the level have even integer values in strictly decreasing order (from left to right).
Given the root of a binary tree, return true if the binary tree is Even-Odd, otherwise return false.
 */
class Solution {
    public boolean isEvenOddTree(TreeNode root) {
        Queue<TreeNode> q=new LinkedList<>();
        q.add(root);
        q.add(null);
        int mod=1;
        int cmp=root.val-1;
        while(!q.isEmpty()){
            TreeNode temp=q.remove();
            if(temp==null){
                if(q.isEmpty()){
                    break;
                }
                q.add(null);
                mod=mod^1;
                if(mod==1){
                    cmp=q.peek().val-1;
                }else{
                    cmp=q.peek().val+1;
                }
                continue;
            }
            // System.out.println(temp.val);
            if(temp.val%2!=mod){
                return false;
            }
            if(mod==1 && cmp >= temp.val){
                return false;
            }
            if(mod==0 && cmp <= temp.val){
                return false;
            }
            cmp=temp.val;
            if(temp.left!=null){
                q.add(temp.left);
            }
            if(temp.right!=null){
                q.add(temp.right);
            }
        }
        return true;
    }
}
